# GitHub Actions Workflow: Vampi build pipeline with security test
name: Vampi build pipeline with security test

on:
  push:                         # Trigger on any push
  repository_dispatch:         # Allow external systems to trigger via repository_dispatch
  workflow_dispatch:           # Allow manual triggering from the GitHub UI

jobs:
  scan:
    runs-on: ubuntu-latest     # Use the latest Ubuntu runner

    steps:
      - name: Checkout
        uses: actions/checkout@v2  # Check out the repository contents

      - name: Run VAmPI 
        run: docker compose up -d  # Start VAmPI API using Docker Compose in detached mode

      - name: Test VAmPI
        run: sleep 5 && curl http://localhost:5002/ --retry 10 --retry-delay 1 
        # Wait for service to start, then ping the API to ensure it's up (retry up to 10 times)

      - name: Createdb
        run: curl http://localhost:5002/createdb 
        # Initialize VAmPI with test data

      - name: Docker login
        uses: docker/login-action@v1 
        with:
          registry: us-central1-docker.pkg.dev/noname-artifacts/nns-docker
          username: ${{ secrets.ACTIVE_REGISTRY_USER }}         # Docker registry username from secrets
          password: ${{ secrets.ACTIVE_REGISTRY_PASSWORD }}     # Docker registry password from secrets

      # Run Active Testing scan using the CLI from the container registry
      - name: Active Testing Scan
        run: >
          docker run 
          --add-host=host.docker.internal:host-gateway 
          -e ACTIVE_CONFIG_FILE_PATH=/noname/config.json 
          -v $(pwd)/noname:/noname 
          -v $(pwd)/openapi_specs:/openapi_specs 
          us-central1-docker.pkg.dev/noname-artifacts/nns-docker/active-cli:$(curl -k ${{secrets.ACTIVE_API_URL}}/backend/version) scan 
          --api-url=${{ secrets.ACTIVE_API_URL }} 
          --api-token=${{ secrets.ACTIVE_API_TOKEN }} 
          --test-group-id=699c4b25-b4ca-47e5-8c95-23c3a0afa990
          --branch-name=${{ github.head_ref || github.ref_name }}
          --severity-threshold=medium
          --concurrency=1
          --analyze

  deploy:
    needs: scan                      # Only run if scan job passes
    runs-on: ubuntu-latest

    steps:
      - name: echo
        run: echo Vampi security scan passed, deploying to production
        # Placeholder for deployment; just an echo statement for now
